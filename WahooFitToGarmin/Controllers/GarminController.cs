using System;
using System.Diagnostics;
using System.IO;
using System.Linq;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using WahooFitToGarmin.Services;

namespace WahooFitToGarmin.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class GarminController : Controller
    {
        private const string GarminUploaderFolderPath = "/usr/local/lib/python3.7/dist-packages/garmin_uploader/";
        private const string ActivityFolderPath = "Activities";
        private const int Timeout = 2000;
        private readonly IGarminConnectSettingsService _garminConnectSettingsService;
        private readonly ILogger<GarminController> _logger;

        public GarminController(IGarminConnectSettingsService garminConnectSettingsService, ILogger<GarminController> logger)
        {
            _garminConnectSettingsService = garminConnectSettingsService;
            _logger = logger;
        }

        [HttpGet]
        public ActionResult SendFile()
        {
            _logger.LogInformation($"{DateTime.Now} ==> Enter SendFile GET method");
            _logger.LogInformation($"========================================================");

            var dirExist = Directory.Exists(GarminUploaderFolderPath);
            if (!dirExist)
            {
                _logger.LogInformation($"{DateTime.Now} ==> Garmin_uploader folder not found");
                _logger.LogInformation($"========================================================");
            }

            var allFitFiles = Directory.GetFiles(ActivityFolderPath, "*.fit");

            var fitFile = allFitFiles.FirstOrDefault();
            if (fitFile == null) return Ok();

            var res = Run(Path.Combine(GarminUploaderFolderPath, "cli.py"), $"-u {_garminConnectSettingsService.GetGarminConnectUserName()} -p {_garminConnectSettingsService.GetGarminConnectPassword()} \"{fitFile}\"");

            Console.WriteLine(res);
            _logger.LogInformation($"{DateTime.Now} ==> Garmin_uploader execution result : {res}");

            if (res.Contains("Uploaded activity") || res.Contains("Activity already uploaded"))
                System.IO.File.Delete(fitFile);

            _logger.LogInformation("-------------------------------------------------------------------------------");
            return Ok();
        }

        public string Run(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = "python3";
            start.Arguments = $"{cmd} {args}";
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using Process process = Process.Start(start);
            using StreamReader reader = process.StandardOutput;
            string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
            string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")


            return stderr + " " + result;

        }


    }
}
